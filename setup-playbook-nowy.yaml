- name: Initialize master and worker nodes
  become: true
  hosts: all
  tasks:

   - name: Make the Swap inactive
     command: swapoff -a

   - name: Remove Swap entry from /etc/fstab.
     lineinfile:
       dest: /etc/fstab
       regexp: swap
       state: absent

   - name: Create a empty file for containerd module.
     copy:
       content: ""
       dest: /etc/modules-load.d/containerd.conf
       force: no

   - name: Configure module for containerd.
     blockinfile:
       path: /etc/modules-load.d/containerd.conf 
       block: |
            overlay
            br_netfilter

   - name: Create a empty file for kubernetes sysctl params.
     copy:
       content: ""
       dest: /etc/sysctl.d/99-kubernetes-cri.conf
       force: no

   - name: Configure sysctl params for Kubernetes.
     lineinfile:
       path: /etc/sysctl.d/99-kubernetes-cri.conf 
       line: "{{ item }}"
     with_items:
       - 'net.bridge.bridge-nf-call-iptables  = 1'
       - 'net.ipv4.ip_forward                 = 1'
       - 'net.bridge.bridge-nf-call-ip6tables = 1'

   - name: Apply sysctl params without reboot.
     command: sysctl --system

   - name: Installing Prerequisites for Kubernetes
     apt: 
       name:
         - apt-transport-https
         - ca-certificates
         - curl
         - gnupg-agent
         - vim
         - software-properties-common
       state: present

   - name: Add Dockerâ€™s official GPG key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present

   - name: Add Docker Repository
     apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
       state: present
       filename: docker
       update_cache: yes

   - name: Install containerd.
     apt: 
       name:
         - containerd.io
       state: present

   - name: Configure containerd.
     file:
       path: /etc/containerd
       state: directory

   - name: Configure containerd.
     shell: /usr/bin/containerd config default > /etc/containerd/config.toml

   - name: Enable containerd service, and start it.
     systemd: 
       name: containerd
       state: restarted
       enabled: yes
       daemon-reload: yes

   - name: Create directory if it doesn't exist
     file:
       path: /etc/apt/keyrings
       state: directory
       mode: '0755'

   - name: Download Kubernetes key
     get_url:
       url: "https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key"
       dest: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
       mode: '0644'
     delegate_to: localhost

   - name: Dearmor the key
     command: "gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
     args:
       chdir: "/etc/apt/keyrings/"

   - name: Set permissions on keyring file
     file:
       path: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
       mode: '0644'

   - name: Add Kubernetes repository configuration
     lineinfile:
       path: /etc/apt/sources.list.d/kubernetes.list
       line: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /'
       create: yes
       state: present

   - name: Set permissions on Kubernetes repository configuration file
     file:
       path: "/etc/apt/sources.list.d/kubernetes.list"
       mode: '0644'

   - name: Installing Kubernetes Cluster Packages.
     apt: 
       name:
         - kubeadm
         - kubectl
         - kubelet
       state: present

   - name: Enable service kubelet, and enable persistently
     service: 
       name: kubelet
       enabled: yes

   - name: Reboot all the kubernetes nodes.
     reboot:
       post_reboot_delay: 60
       reboot_timeout: 80
       connect_timeout: 300
       test_command: uptime
   - name: Make the Swap inactive
     command: swapoff -a
